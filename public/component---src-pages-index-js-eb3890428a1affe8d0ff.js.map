{"version":3,"file":"component---src-pages-index-js-eb3890428a1affe8d0ff.js","mappings":"kLAmIA,UAzHkBA,KAChB,MAwCM,EAACC,EAAe,EAACC,IAAqBC,EAAAA,EAAAA,UAAS,IAC/CC,EAAc,oCA0BpB,OAxBAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAe,EACfC,GAAW,EAEf,MAAMC,EAAWC,aAAY,KACvBF,IAIAD,EAAeF,EAAYM,QAC7BR,EAAkBE,EAAYO,UAAU,EAAGL,EAAe,IAC1DA,MAEAC,GAAW,EACXK,YAAW,KACTN,EAAe,EACfC,GAAW,CAAK,GACf,MACL,GACC,KAEH,MAAO,IAAMM,cAAcL,EAAS,GACnC,IAGDM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,uBACXF,EAAAA,cAACG,EAAAA,EAAM,KACLH,EAAAA,cAACI,EAAAA,EAAM,MACPJ,EAAAA,cAAA,OAAKK,UAAU,sBACfL,EAAAA,cAAA,OAAKK,UAAU,mBACjBL,EAAAA,cAAA,OAAKK,UAAU,oBACbL,EAAAA,cAAA,YAAOb,IAITa,EAAAA,cAAA,OAAKK,UAAU,YACTL,EAAAA,cAAA,OAAKK,UAAU,QACbL,EAAAA,cAAA,SAAI,KAAK,qEAETA,EAAAA,cAAA,SAAI,KAAK,8CAGTA,EAAAA,cAAA,UACAA,EAAAA,cAAA,UAAI,WAAS,IAAI,yBACfA,EAAAA,cAAA,UAAI,UAAQ,IAAI,SAChBA,EAAAA,cAAA,UAAI,eAAa,IAAI,WACrBA,EAAAA,cAAA,UAAI,sBAAoB,IAAI,WAC5BA,EAAAA,cAAA,UAAI,0BAAwB,IAAI,eAChCA,EAAAA,cAAA,UAAI,sBAAoB,IAAI,WAC5BA,EAAAA,cAAA,UAAI,gCAA8B,IAAI,eACtCA,EAAAA,cAAA,UAAI,iBAAe,IAAI,aACvBA,EAAAA,cAAA,SAAI,KAAK,wBAIbA,EAAAA,cAAA,OAAKK,UAAU,gBACbL,EAAAA,cAAA,QAAMK,UAAU,UAAS,MACzBL,EAAAA,cAAA,SACEM,KAAK,OACLC,YAAY,kBACZC,UAtESC,IACrB,GAAkB,UAAdA,EAAMC,IAAiB,CAnCNC,KACrB,MAAMC,EAAOD,EAAME,MAAM,KAGzB,GAAgB,OAFAD,EAAK,GAAGE,cAEF,CACpB,MAAMC,EAAaH,EAAK,GAAGE,cAC3B,GAAmB,UAAfC,EACFC,OAAOC,SAASC,KAAM,cACnB,GAAkB,YAAfH,EACNC,OAAOC,SAASC,KAAM,+DACnB,GAAkB,YAAfH,EACJC,OAAOC,SAASC,KAAM,gBACrB,GAAkB,gBAAfH,EACFC,OAAOC,SAASC,KAAM,oBACvB,GAAkB,gBAAfH,EACAC,OAAOC,SAASC,KAAM,oBACzB,GAAkB,YAAfH,EACEC,OAAOC,SAASC,KAAM,gBAC3B,GAAkB,cAAfH,EACIC,OAAOC,SAASC,KAAM,sCAC5B,CAEJC,QAAQC,MAAM,sBAAsBL,GACpC,MAAMM,EAAeC,SAASC,cAAc,KAC5CF,EAAaG,YAAW,sBAAyBT,EACjDM,EAAahB,UAAY,gBACzBiB,SAASG,cAAc,iBAAiBC,YAAYL,GACpDvB,YAAW,KACTuB,EAAaM,QAAQ,GACpB,IACL,CACF,GAMEC,CADcnB,EAAMoB,OAAOC,MAE7B,GAmEYzB,UAAU,qBAKlBL,EAAAA,cAAA,OAAKK,UAAU,aAEbL,EAAAA,cAAC+B,EAAAA,EAAS,CAACC,KAAK,GAAGC,MAAM,eAI5B,C","sources":["webpack://khalilprojects/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport LsDisplay from \"../components/LsDisplay\"\nimport Header from \"../components/header\"\nimport { useState, useEffect } from 'react';\n\n// Import your CSS file for styling\n\n\nconst IndexPage = () => {\n  const handleCommand = (input) => {\n    const args = input.split(\" \");\n    const command = args[0].toLowerCase();\n  \n    if (command === \"cd\") {\n      const targetPage = args[1].toLowerCase();\n      if (targetPage === \"about\" /* Add more valid page names */) {\n        window.location.href ='/about';}\n      else if(targetPage === \"contact\" /* Add more valid page names */) {\n        window.location.href ='http://linkedin.com/in/mohammed-khalil-ghali-11305119b/';}\n      else if(targetPage === \"pdfchat\" /* Add more valid page names */) {\n          window.location.href ='/pdfchat';}\n      else if(targetPage === \"websitechat\" /* Add more valid page names */) {\n            window.location.href ='/websitechat';}\n      else if(targetPage === \"youtubechat\" /* Add more valid page names */) {\n              window.location.href ='/youtubechat';}\n      else if(targetPage === \"csvchat\" /* Add more valid page names */) {\n                window.location.href ='/csvchat';}\n      else if(targetPage === \"portfolio\" /* Add more valid page names */) {\n                  window.location.href ='/Portfolios /KhalilÂ´s Portfolio';}\n       else {\n        // Display an error message directly\n        console.error(`Invalid directory: ${targetPage}`);\n        const errorMessage = document.createElement(\"p\");\n        errorMessage.textContent = `Invalid directory: ${targetPage}`;\n        errorMessage.className = \"error-message\";\n        document.querySelector(\".command-line\").appendChild(errorMessage);\n        setTimeout(() => {\n          errorMessage.remove();\n        }, 2000);\n      }\n    }\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      const input = event.target.value;\n      handleCommand(input);\n    }\n  };\n  const [typewriterText, setTypewriterText] = useState('');\n  const initialText = '(bash)root@mac-Mohammed-Khalil:~$';\n\n  useEffect(() => {\n    let currentIndex = 0;\n    let isPaused = false;\n\n    const interval = setInterval(() => {\n      if (isPaused) {\n        return;\n      }\n\n      if (currentIndex < initialText.length) {\n        setTypewriterText(initialText.substring(0, currentIndex + 1));\n        currentIndex++;\n      } else {\n        isPaused = true;\n        setTimeout(() => {\n          currentIndex = 0;\n          isPaused = false;\n        }, 3000); // Pause for 3 seconds\n      }\n    }, 150); // Adjust the interval as needed\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <Seo title=\"Terminal Portfolio\" />\n      <Layout>\n        <Header />\n        <div className=\"terminal-container\">\n        <div className=\"LsDisplayWindoz\">\n      <div className=\"LsDisplayTaskbar\" >\n        <span>{typewriterText}</span>\n        \n\n      </div>\n      <div className=\"terminal\">\n            <div className=\"help\">\n              <p>{\">>\"}Alternatively! Type your command to access one of the directories</p>\n              \n              <p>{\">>\"}Type 'cd' followed by the directory name: </p>\n              \n              \n              <ul>\n              <li>Section-{\">\"}Corresponding command</li>\n                <li>/About-{\">\"}about</li>\n                <li>/Contact Me-{\">\"}contact</li>\n                <li>/Chat With Any PDF-{\">\"}pdfchat</li>\n                <li>/Chat With Any Website-{\">\"}websitechat</li>\n                <li>/Chat With Any CSV-{\">\"}csvchat</li>\n                <li>/Chat With Any Youtube Video-{\">\"}youtubechat</li>\n                <li>/My Portfolio-{\">\"}portfolio</li>\n                <p>{\">>\"}example: cd about </p>\n                {/* Add more possible directions */}\n              </ul>\n            </div>\n            <div className=\"command-line\">\n              <span className=\"prompt\">~$</span>\n              <input\n                type=\"text\"\n                placeholder=\"Type command...\"\n                onKeyDown={handleKeyDown}\n                className=\"command-input\"\n              />\n            </div>\n          </div>\n      </div>\n        <div className=\"container\">\n          \n          <LsDisplay text=\"\" delay=\"natural\"/>\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default IndexPage\n"],"names":["IndexPage","typewriterText","setTypewriterText","useState","initialText","useEffect","currentIndex","isPaused","interval","setInterval","length","substring","setTimeout","clearInterval","React","Seo","title","Layout","Header","className","type","placeholder","onKeyDown","event","key","input","args","split","toLowerCase","targetPage","window","location","href","console","error","errorMessage","document","createElement","textContent","querySelector","appendChild","remove","handleCommand","target","value","LsDisplay","text","delay"],"sourceRoot":""}